<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg name)">
  <!-- robot name parameter -->
  <xacro:arg name="name" default="ur5_robotiq_85"/>
  
  <!-- import main macro -->
  <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>
  <xacro:include filename="$(find robotiq_description)/urdf/robotiq_2f_85_macro.urdf.xacro"/>
  <xacro:include filename="$(find ur_description_custom)/urdf/ur5_robotiq_85_macro.xacro"/>

  <!-- parameters -->
  <xacro:arg name="tf_prefix" default="" />
  <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/ur5e/joint_limits.yaml"/>
  <xacro:arg name="kinematics_params" default="$(find ur_description)/config/ur5e/default_kinematics.yaml"/>
  <xacro:arg name="physical_params" default="$(find ur_description)/config/ur5e/physical_parameters.yaml"/>
  <xacro:arg name="visual_params" default="$(find ur_description)/config/ur5e/visual_parameters.yaml"/>
  <xacro:arg name="transmission_hw_interface" default=""/>
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>

  <!-- Simulation parameters -->
  <xacro:arg name="use_fake_hardware" default="false" />
  <xacro:arg name="fake_sensor_commands" default="false" />
  <xacro:arg name="sim_gazebo" default="false" />
  <xacro:arg name="sim_ignition" default="false" />
  <xacro:arg name="simulation_controllers" default="" />

  <!-- initial position for simulations (Fake Hardware, Gazebo, Ignition) -->
  <xacro:arg name="initial_positions_file" default="$(find ur_description_custom)/config/initial_positions.yaml"/>
  
  <!-- Override initial_positions to load from our config -->
  <xacro:property name="initial_positions" value="${xacro.load_yaml('$(find ur_description_custom)/config/initial_positions.yaml')['initial_positions']}"/>

  <!-- convert to property to use substitution in function -->
  <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>
  <xacro:property name="is_sim_gazebo" value="$(arg sim_gazebo)"/>
  <xacro:property name="is_sim_ignition" value="$(arg sim_ignition)"/>

  <!-- create link fixed to the "world" -->
  <link name="world" />

  <xacro:if value="${is_sim_gazebo or is_sim_ignition}">
    <link name="ground_plane">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="5 5 0"/>
        </geometry>
        <material name="ground_white">
          <color rgba="1 1 1 0.5"/>
        </material>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="5 5 0"/>
        </geometry>
      </collision>
    </link>

    <joint name="ground_plane_joint" type="fixed">
      <origin xyz="0 0 -0.01" rpy="0 0 0"/>
      <parent link="world"/>
      <child link="ground_plane"/>
    </joint>
  </xacro:if>

  <!-- robot -->
  <xacro:ur5_robotiq_85_robot
    name="$(arg name)"
    tf_prefix="$(arg tf_prefix)"
    parent="world"
    use_fake_hardware="$(arg use_fake_hardware)"
    fake_sensor_commands="$(arg fake_sensor_commands)"
    sim_gazebo="$(arg sim_gazebo)"
    sim_ignition="$(arg sim_ignition)"
    initial_positions="${initial_positions}"
    >
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:ur5_robotiq_85_robot>

  <xacro:if value="$(arg sim_gazebo)">
   <!-- Gazebo plugins -->
   <gazebo reference="world">
   </gazebo>
   <gazebo>
     <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
       <parameters>$(arg simulation_controllers)</parameters>
     </plugin>
   </gazebo>
  </xacro:if>

  <xacro:if value="$(arg sim_ignition)">
    <!-- Ignition plugins -->
    <gazebo reference="world">
    </gazebo>
    <gazebo>
      <plugin filename="libign_ros2_control-system.so" name="ign_ros2_control::IgnitionROS2ControlPlugin">
        <parameters>$(arg simulation_controllers)</parameters>
        <controller_manager_node_name>$(arg tf_prefix)controller_manager</controller_manager_node_name>
      </plugin>
    </gazebo>
  </xacro:if>

</robot>